import "./chunk-VEEC47JC.js";
import {
  defineComponent,
  inject,
  provide,
  ref
} from "./chunk-2244K35H.js";
import {
  st
} from "./chunk-YS6YQ2X7.js";
import "./chunk-J43GMYXM.js";

// node_modules/@casl/vue/dist/es5m/index.js
function reactiveAbility(n) {
  if (n.hasOwnProperty("possibleRulesFor"))
    return n;
  var r = ref(true);
  n.on("updated", function() {
    r.value = !r.value;
  });
  var t = n.possibleRulesFor.bind(n);
  n.possibleRulesFor = function(i2, n2) {
    r.value = r.value;
    return t(i2, n2);
  };
  n.can = n.can.bind(n);
  n.cannot = n.cannot.bind(n);
  return n;
}
var o = Symbol("ability");
function useAbility() {
  var i2 = inject(o);
  if (!i2)
    throw new Error("Cannot inject Ability instance because it was not provided");
  return i2;
}
function provideAbility(i2) {
  provide(o, reactiveAbility(i2));
}
function a(i2) {
  if ("a" in i2)
    return "a";
  if ("this" in i2)
    return "this";
  if ("an" in i2)
    return "an";
  return "";
}
var u = defineComponent({ name: "Can", props: { I: String, do: String, a: [String, Function], an: [String, Function], this: [String, Function, Object], on: [String, Function, Object], not: Boolean, passThrough: Boolean, field: String }, setup: function i(n, r) {
  var t = r.slots;
  var e = n;
  var o2 = "do";
  var u2 = "on";
  if (!(o2 in n)) {
    o2 = "I";
    u2 = a(n);
  }
  if (!e[o2])
    throw new Error("Neither `I` nor `do` prop was passed in <Can>");
  if (!t.default)
    throw new Error("Expects to receive default slot");
  var l2 = useAbility();
  return function() {
    var i2 = l2.can(e[o2], e[u2], e.field);
    var r2 = n.not ? !i2 : i2;
    if (!n.passThrough)
      return r2 ? t.default() : null;
    return t.default({ allowed: r2, ability: l2 });
  };
} });
function l(i2, n, r) {
  if (!n || !(n instanceof st))
    throw new Error("Please provide an Ability instance to abilitiesPlugin plugin");
  i2.provide(o, reactiveAbility(n));
  if (r && r.useGlobalProperties) {
    i2.config.globalProperties.$ability = n;
    i2.config.globalProperties.$can = n.can.bind(n);
  }
}
export {
  o as ABILITY_TOKEN,
  u as Can,
  l as abilitiesPlugin,
  provideAbility,
  useAbility
};
//# sourceMappingURL=@casl_vue.js.map
